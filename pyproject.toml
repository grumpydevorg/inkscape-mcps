[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project]
name = "inkscape-mcp"
version = "0.1.0"
description = "MCP server for Inkscape CLI and DOM operations"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.0.0",
    "pydantic>=2.0.0",
    "anyio>=4.0.0",
    "filelock>=3.0.0",
    "inkex>=1.3.0",
    "scour>=0.37,<0.38",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "ty>=0.0.1a19",
]

[project.scripts]
inkscape-mcp-cli = "inkscape_mcp.cli_server:main"
inkscape-mcp-dom = "inkscape_mcp.dom_server:main"
inkscape-mcp = "inkscape_mcp.combined:main"

[project.urls]
Homepage = "https://github.com/yourusername/inkscape-mcp"
Repository = "https://github.com/yourusername/inkscape-mcp"
Issues = "https://github.com/yourusername/inkscape-mcp/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/inkscape_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "README.md",
    "LICENSE",
]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]